{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/piecePlacementHelper.js","webpack:///./src/scripts/puzzlePieceHelper.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sizeOfPieces","pieceData","row","col","index","numRows","numCols","director","type","a","draw","b","createRightFace","createBottomFace","getInverseRightFace","getInverseBottomFace","path","this","inverse","Math","floor","random","checkSidePieces","selectedPiece","piecesMatrix","ps","y","pieceOnTop","x","isSameAngle","isTopPieceNear","isOnTop","isHierarchyAvailableToConnect","console","log","checkHierarchyBeforeConnecting","pieceOnBottom","isBottomPieceNear","pieceOnLeft","isLeftPieceNear","isOnRight","pieceOnRight","isRightPieceNear","piece1","piece2","angle","bottomPiece","topPiece","threshold","bottomPieceCoords","getCoords","topRect","top","bottomRect","rightRect","left","parseInt","clientWidth","leftRect","pieceOnTopCoords","pieceOnTopTopRect","clientHeight","pieceOnTopBottomRect","pieceOnTopRightRect","rectanglesIntersect","leftPiece","rightPiece","leftPieceCoords","rightPieceCoords","pieceOnRightTopRect","pieceOnRightBottomRect","pieceOnRightRightRect","minAx","minAy","maxAx","maxAy","minBx","minBy","maxBx","maxBy","pieceToConnectTo","pieceToBeConnected","contains","parentElement","className","childNodes","find","child","connectChildPieces","connectPieces","childrenToMove","forEach","topPosition","leftPosition","removeChild","appendChild","style","elem","box","getBoundingClientRect","body","document","docEl","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","idOfImageSelected","offset","piecesPlacedCorrectly","timeInitial","timeEnd","singleClickTimer","lastTarget","zIndex","host","clickCount","puzzleImagesList","imagesLoaded","positionsList","rotatePieces","seeImage_btn","getElementById","createPiece","piecePath","canvas","createElement","width","height","ctx","getContext","mask","Path2D","save","clip","imgSrc","base_image","Image","test","indexOf","location","crossOrigin","src","onload","drawImage","pngUrl","toDataURL","image","rowList","move","innerHTML","onmousedown","getPos","onclick","onDblClick","ontouchstart","occupy","position","offsetLeft","offsetTop","onmouseup","dropPiece","ontouchend","occupied","querySelector","zIndexPrevi","display","placePuzzleImagesInPlace","createListModels","fetch","max","getRandomImageId","then","response","json","indexOfImageToLoad","getRandomInt","id","img","alt","addEventListener","classList","remove","createPuzzle","selectModel","getElementsByClassName","piecesOnBody","getElementsByTagName","innerWidth","innerHeight","alert","backgroundUrl","backgroundImage","final","add","opacity","start","querySelectorAll","e","positionToSpawn","getPositionToSpawn","parentNode","checked","setTimeout","rotation","transform","Date","getTime","arrangePieces","undefined","timeout","clearTimeout","minHeightSpawnBottom","maxHeightSpawnBottom","maxSpawnLeft","minSpawnRight","maxSpawnRight","sideOfSpawn","turn","fixPiece","correspondentPositionOnContainer","onmouseover","onmouseout","onmousemove","ondblclick","cursor","transition","hours","minutes","seconds","pieceToPlace","didItPlace","placePiece","pieceToCheckChildren","hasConnected","drag","clientX","touches","clientY","pieceToDrag","mousePosition","preventDefault","stopPropagation","takePiece","target","cords","min","ceil","seeImage","element","isFullscreen","fullscreen","buttonFullScreen","msExitFullscreen","exitFullscreen","msRequestFullscreen","requestFullscreen","radios","getElementsByName","currentTarget","getAttribute","passive","menuElement","menuButtonElement"],"mappings":"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","file":"js/app.777cc2fe.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([83,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","let sizeOfPieces;\n\n/**\n * Function to check if piece has a maching side piece\n *\n * @param {Element} selectedPiece - selected piece\n * @param {Array<Array<Element>>} piecesMatrix - matrix with all puzzle pieces on their respective position\n * @param {number} ps - piece size\n * @param {number} numRows - number of rows in pieces matrix\n * @param {number} numCols- number of columns in pieces matrix\n * @returns {boolean} - returns true if the piece was connected to other piece\n */\nexport function checkSidePieces(selectedPiece, piecesMatrix, ps, numRows, numCols ) {\n  let threshold = 5;\n  sizeOfPieces = ps;\n\n  // CHECK TOP PIECE\n  if( selectedPiece.y > 0 ) {\n    let pieceOnTop = piecesMatrix[selectedPiece.y-1][selectedPiece.x];\n    if( isSameAngle(selectedPiece, pieceOnTop) ) {\n      let isTopPieceNear = isOnTop(selectedPiece, pieceOnTop, threshold);\n      if( isTopPieceNear && isHierarchyAvailableToConnect(selectedPiece, pieceOnTop) ) {\n        console.log('connect with piece in top: ', isTopPieceNear);\n        checkHierarchyBeforeConnecting(selectedPiece, pieceOnTop);\n        return true;\n      }\n    }\n  }\n  // CHECK BOTTOM PIECE\n  if(  selectedPiece.y < numRows-1 ) {\n    let pieceOnBottom = piecesMatrix[selectedPiece.y+1][selectedPiece.x];\n    if( isSameAngle(selectedPiece, pieceOnBottom) ) {\n      let isBottomPieceNear = isOnTop(pieceOnBottom, selectedPiece, threshold);\n      if( isBottomPieceNear && isHierarchyAvailableToConnect(selectedPiece, pieceOnBottom) ) {\n        console.log('connect with piece in bottom: ', isBottomPieceNear);\n        checkHierarchyBeforeConnecting(selectedPiece, pieceOnBottom);\n        return true;\n      }\n    }\n  }\n  // CHECK LEFT PIECE\n  if(  selectedPiece.x > 0 ) {\n    let pieceOnLeft = piecesMatrix[selectedPiece.y][selectedPiece.x - 1];\n    if( isSameAngle(selectedPiece, pieceOnLeft) ) {\n      let isLeftPieceNear = isOnRight(pieceOnLeft, selectedPiece, threshold);\n      if( isLeftPieceNear && isHierarchyAvailableToConnect(selectedPiece, pieceOnLeft) ) {\n        console.log('connect with piece in left: ', isLeftPieceNear);\n        checkHierarchyBeforeConnecting(selectedPiece, pieceOnLeft);\n        return true;\n      }\n    }\n  }\n  // CHECK RIGHT PIECE\n  if(  selectedPiece.x < numCols - 1 ) {\n    let pieceOnRight = piecesMatrix[selectedPiece.y][selectedPiece.x + 1];\n    if( isSameAngle(selectedPiece, pieceOnRight) ) {\n      let isRightPieceNear = isOnRight(selectedPiece, pieceOnRight, threshold);\n      if( isRightPieceNear && isHierarchyAvailableToConnect(selectedPiece, pieceOnRight) ) {\n        console.log('connect with piece in right: ', isRightPieceNear);\n        checkHierarchyBeforeConnecting(selectedPiece, pieceOnRight);\n        return true;\n      }\n    }\n  }\n\n  return false;\n\n}\n\n/**\n * Check if both pieces have the same rotation\n *\n * @param {Element} piece1 - first puzzle piece to compare\n * @param {Element} piece2 - second puzzle piece to compare\n * @returns {boolean} - value indicating if both pieces have the same rotation\n */\nfunction isSameAngle(piece1, piece2) {\n  return piece1.angle === piece2.angle;\n}\n\n/**\n * Check if a piece is on top (above) of the other so it can be connected\n *\n * @param bottomPiece - bottom puzzle piece\n * @param topPiece - top puzzle piece\n * @param threshold - threshold at which a piece is considered on top of the other\n * @returns {boolean} - value indicating if the top piece is on top of the bottom piece\n */\nfunction isOnTop(bottomPiece, topPiece, threshold) {\n  let bottomPieceCoords = getCoords(bottomPiece);\n  let topRect = bottomPieceCoords.top - threshold;\n  let bottomRect = bottomPieceCoords.top + threshold;\n  let rightRect = bottomPieceCoords.left + parseInt(bottomPiece.clientWidth / 2) + threshold;\n  let leftRect = bottomPieceCoords.left + parseInt(bottomPiece.clientWidth / 2) - threshold;\n  let pieceOnTopCoords = getCoords(topPiece);\n  let pieceOnTopTopRect = pieceOnTopCoords.top + topPiece.clientHeight - threshold;\n  let pieceOnTopBottomRect = pieceOnTopCoords.top + topPiece.clientHeight + threshold;\n  let pieceOnTopRightRect = pieceOnTopCoords.left + parseInt(topPiece.clientWidth / 2) + threshold;\n  let pieceOnTopLeftRect = pieceOnTopCoords.left + parseInt(topPiece.clientWidth / 2) - threshold;\n\n  return rectanglesIntersect(leftRect,topRect,rightRect,bottomRect , pieceOnTopLeftRect,pieceOnTopTopRect,pieceOnTopRightRect,pieceOnTopBottomRect );\n}\n\n/**\n * Check if a piece is on the right of the other so it can be connected\n *\n * @param leftPiece - left puzzle piece\n * @param rightPiece - right puzzle piece\n * @param threshold - threshold at which a piece is considered on the right of the other\n * @returns {boolean} - value indicating if the left piece is on the left of the right piece\n */\nfunction isOnRight(leftPiece, rightPiece, threshold) {\n  let leftPieceCoords = getCoords(leftPiece);\n  let topRect = leftPieceCoords.top + parseInt(leftPiece.clientHeight / 2) - threshold;\n  let bottomRect = leftPieceCoords.top + parseInt(leftPiece.clientHeight / 2) + threshold;\n  let rightRect = leftPieceCoords.left + leftPiece.clientWidth + threshold;\n  let leftRect = leftPieceCoords.left + leftPiece.clientWidth - threshold;\n  let rightPieceCoords = getCoords(rightPiece);\n  let pieceOnRightTopRect = rightPieceCoords.top + parseInt(rightPiece.clientHeight / 2) - threshold;\n  let pieceOnRightBottomRect = rightPieceCoords.top + parseInt(rightPiece.clientHeight / 2) + threshold;\n  let pieceOnRightRightRect = rightPieceCoords.left + threshold;\n  let pieceOnRightLeftRect = rightPieceCoords.left - threshold;\n\n  return rectanglesIntersect(leftRect,topRect,rightRect,bottomRect , pieceOnRightLeftRect,pieceOnRightTopRect,pieceOnRightRightRect,pieceOnRightBottomRect );\n}\n\n/**\n * Function indicating if the positions of two rectangles intersect\n *\n * @param minAx - min x value of first rectangle\n * @param minAy - min y value of first rectangle\n * @param maxAx - max x value of first rectangle\n * @param maxAy - max y value of first rectangle\n * @param minBx - min x value of second rectangle\n * @param minBy - min y value of second rectangle\n * @param maxBx - max x value of second rectangle\n * @param maxBy - max y value of second rectangle\n * @returns {boolean} - boolean indicating if the positions of the two passed rectangles intersect\n */\nfunction rectanglesIntersect(\n  minAx, minAy, maxAx, maxAy,\n  minBx, minBy, maxBx, maxBy ) {\n  return maxAx >= minBx && minAx <= maxBx && minAy <= maxBy && maxAy >= minBy;\n}\n\n/**\n * Check if two puzzle pieces have a compatible hierarchy so they could be connected.\n * If one is children, parent or sibling of the other, they cannot be connected.\n *\n * @param pieceToConnectTo - puzzle piece to connect to\n * @param pieceToBeConnected - puzzle piece to be connected\n * @returns {boolean} - value indicating if pieces have a valid hierarchy to connect\n */\nfunction isHierarchyAvailableToConnect(pieceToConnectTo, pieceToBeConnected) {\n  if(pieceToConnectTo.contains(pieceToBeConnected) || pieceToBeConnected.contains(pieceToConnectTo)) return false;\n  if(pieceToConnectTo.parentElement.className === 'move' && pieceToConnectTo.parentElement === pieceToBeConnected.parentElement) return false;\n  return true;\n}\n\n/**\n * Function to check for child puzzle pieces and connect them to the other parent, to maintain order\n *\n * @param pieceToConnectTo - puzzle piece to connect to\n * @param pieceToBeConnected - puzzle piece to be connected\n */\nfunction checkHierarchyBeforeConnecting(pieceToConnectTo, pieceToBeConnected) {\n  //check if piece to be connected is a parent, in that case the parent piece and all the children have to pass for the piece to connect to\n  if([...pieceToBeConnected.childNodes].find(child => child.className === 'move')) {\n    console.log('is a parent, children will be moved to piece to connect. Children: ', pieceToBeConnected.childNodes);\n    connectChildPieces(pieceToConnectTo, pieceToBeConnected);\n    connectPieces(pieceToConnectTo, pieceToBeConnected);\n  }\n  // check if the piece to be connected has a parent piece, in that case connect the parent and all its children\n  else if(pieceToBeConnected.parentElement.className === 'move' ) {\n    console.log('is child, connect parent');\n    pieceToBeConnected = pieceToBeConnected.parentElement;\n\n    //if destination piece has a parent piece, connect to parent piece instead\n    if( pieceToConnectTo.parentElement.className === 'move' ) {\n      pieceToConnectTo = pieceToConnectTo.parentElement;\n    }\n\n    connectChildPieces(pieceToConnectTo, pieceToBeConnected);\n    connectPieces(pieceToConnectTo, pieceToBeConnected);\n  }else {\n    connectPieces(pieceToConnectTo, pieceToBeConnected);\n  }\n\n}\n\n/**\n * Connect child pieces of a given puzzle piece to other puzzle piece\n *\n * @param pieceToConnectTo - puzzle piece to connect to\n * @param pieceToBeConnected - parent of child pieces to connect\n */\nfunction connectChildPieces(pieceToConnectTo, pieceToBeConnected) {\n  let childrenToMove = [];\n  pieceToBeConnected.childNodes.forEach(function(child){\n    if(child.className === 'move') {\n      childrenToMove.push(child);\n    }\n  });\n\n  childrenToMove.forEach(function(child){\n    connectPieces(pieceToConnectTo, child);\n  });\n}\n\n/**\n * Connect two puzzle pieces\n *\n * @param {Element} pieceToConnectTo - puzzle piece to connect to\n * @param {Element} pieceToBeConnected - puzzle piece to be connected\n */\nfunction connectPieces (pieceToConnectTo, pieceToBeConnected){\n  /**\n   * @type {number} topPosition - new top position of connected piece relative to the new parent\n   */\n  let topPosition = (pieceToBeConnected.y - pieceToConnectTo.y) * sizeOfPieces;\n  /**\n   * @type {number} leftPosition - new left position of connected piece relative to the new parent\n   */\n  let leftPosition = (pieceToBeConnected.x - pieceToConnectTo.x) * sizeOfPieces;\n\n  pieceToBeConnected.parentElement.removeChild(pieceToBeConnected);\n  pieceToConnectTo.appendChild(pieceToBeConnected);\n  pieceToBeConnected.style.top = topPosition + 'px';\n  pieceToBeConnected.style.left = leftPosition + 'px';\n}\n\n/**\n * Get absolute coordinates of an element in the document, counting with the scroll\n *\n * @param {Element} elem - element to get the coordinates from\n * @returns {{top: number, left: number}} - coordinates\n */\nexport function getCoords(elem) { // crossbrowser version\n  let box = elem.getBoundingClientRect();\n\n  let body = document.body;\n  let docEl = document.documentElement;\n\n  let scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n  let scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n  let clientTop = docEl.clientTop || body.clientTop || 0;\n  let clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n  let top  = box.top +  scrollTop - clientTop;\n  let left = box.left + scrollLeft - clientLeft;\n\n  return { top: Math.round(top), left: Math.round(left) };\n}","/**\n * @typedef {Object} Path\n * @property {string} draw - svg path of correspondent side\n * @property {string} inverse - inverse of svg path of draw property\n */\n\n/**\n * @typedef {Object} PieceData\n * @property {string} type - type of puzzle piece (location on puzzle grid)\n * @property {Path} a - top puzzle side data\n * @property {Path} b - right puzzle side data\n * @property {Path} c - bottom puzzle side data\n * @property {Path} d - left puzzle side data\n */\n\n/**\n * Function to generate svg path according to a puzzle piece location\n *\n * @param row - puzzle piece row position index\n * @param col - puzzle piece column position index\n * @param index - index of puzzle piece on the matrix\n * @param numRows - number of rows in the puzzle matrix\n * @param numCols - number of columns in a puzzle row\n * @param {Array<Element>} director - list of pieces and their data, similar to the matrix but with a level only\n *\n * @returns {PieceData} - return each side of puzzle piece path\n */\nexport function pieceData(row,col,index, numRows, numCols, director){\n  let object ={};\n  switch (true) {\n    case (col === 0 && row === 0) :\n      object={\n        type:\"supEsquerra\",\n        a:{draw:\" l 100,0 \"},\n        b:createRightFace(index),\n        c:createBottomFace(index),\n        d:{draw:\" l 0,-100\"},\n      };\n      break;\n    case (row === 0 && col === numCols-1) :\n      object={\n        type:\"supDreta\",\n        a:{draw:\" l 100,0 \"},\n        b:{draw:\" l 0,100 \"},\n        c:createBottomFace(index),\n        d:getInverseRightFace(index, director),\n      };\n      break;\n    case (row == numRows-1 && col == 0) :\n      object={\n        type:\"infEsquerra\",\n        a:getInverseBottomFace(index, director, numCols),\n        b:createRightFace(index),\n        c:{draw:\" l -100,0 \"},\n        d:{draw:\" l 0,-100 \"},\n      };\n      break;\n    case (row === numRows-1 && col === numCols-1) :\n      object={\n        type:\"infDreta\",\n        a:getInverseBottomFace(index, director, numCols),\n        b:{draw:\" l 0,100 \"},\n        c:{draw:\" l -100,0 \"},\n        d:getInverseRightFace(index, director),\n      };\n      break;\n    case (row === 0 ) :\n      object={\n        type:\"superior\",\n        a:{draw:\" l 100,0 \"},\n        b:createRightFace(index),\n        c:createBottomFace(index),\n        d:getInverseRightFace(index, director),\n      };\n      break;\n    case (col === 0 ) :\n      object={\n        type:\"esquerra\",\n        a:getInverseBottomFace(index, director, numCols),\n        b:createRightFace(index),\n        c:createBottomFace(index),\n        d:{draw:\" l 0,-100 \"},\n      };\n      break;\n    case (col === numCols-1 ) :\n      object={\n        type:\"dreta\",\n        a:getInverseBottomFace(index, director, numCols),\n        b:{draw:\" l 0,100 \"},\n        c:createBottomFace(index),\n        d:getInverseRightFace(index, director),\n      };\n      break;\n    case (row === numRows-1 ) :\n      object={\n        type:\"inferior\",\n        a:getInverseBottomFace(index, director, numCols),\n        b:createRightFace(index),\n        c:{draw:\" l -100,0 \"},\n        d:getInverseRightFace(index, director),\n      };\n      break;\n    default:\n      object={\n        type:\"central\",\n        a:getInverseBottomFace(index, director, numCols),\n        b:createRightFace(index),\n        c:createBottomFace(index),\n        d:getInverseRightFace(index, director),\n      };\n  }\n  object.col=col;\n  object.row=row;\n  object.index=index;\n  object.path=function(){return this.a.draw+this.b.draw+this.c.draw+this.d.draw+\"z\";};\n  return object;\n\n}\n\n\n/**\n * Create right part of piece and inverse\n *\n * @param {number} i - index of puzzle piece\n * @returns {{draw: {string}, inverse: {string}}} - Return a random draw path\n */\nfunction createRightFace(i){\n  // return {draw:\" l -10,50 l 10,50 \",inverse:\" l  -10,-50 l 10,-50 \"}\n\n  // return {draw:\"l 0, 43 l-5,0 a11,11 1,1,0 0,14 l5,0 l 0, 43\",\n  //   inverse:\"l 0, -43 l-5,0 a11,11 1,1,1 0,-14 l5,0 l 0, -43\"};\n\n  let path = [\n\n    {draw:\"q -4,20 -5,43 a11,15 1,1,0 0,14 q1,20 5,43\",\n      inverse:\"q -4,-20  -5,-43 a11,15 1,1,1 0,-14 q 1-20 5,-43\"},\n    {draw:\"q -4,20 -5,43 a11,15 1,1,1 0,14 q1,20 5,43\",\n      inverse:\"q -4,-20 -5,-43 a11,15 1,1,0 0,-14 q 1-20 5,-43\"},\n    {draw:\"q 4,20 5,43 a11,15 1,1,0 0,14 q -1,20 -5,43\",\n      inverse:\"q 4,-20  5,-43 a11,15 1,1,1 0,-14 q -1-20 -5,-43\"},\n    {draw:\"q 4,20 5,43 a11,15 1,1,1 0,14 q -1,20 -5,43\",\n     inverse:\"q 4,-20 5,-43 a11,15 1,1,0 0,-14 q -1-20 -5,-43\"},\n\n    // {draw: \"q 15,50 0,100\",\n    // inverse: \"q 15,-50  0,-100\"},\n    // {draw: \"q -15,50 0,100\",\n    //   inverse: \"q -15,-50  0,-100\"}\n  ];\n\n\n  // let path =[\n  //   {draw:\"q -4,20 -5,43 l-5,0 a11,11 1,1,0 0,14 l5,0 q1,20 5,43\",\n  //     inverse:\"q -4,-20  -5,-43 l-5,0 a11,11 1,1,1 0,-14 l5,0 q 1-20 5,-43\"},\n  //   {draw:\"q -4,20 -5,43 l5,0 a11,11 1,1,1 0,14 l-5,0 q1,20 5,43\",\n  //     inverse:\"q -4,-20 -5,-43 l 5,0 a11,11 1,1,0 0,-14 l-5,0 q 1-20 5,-43\"},\n  //   {draw:\"q 4,20 5,43 l-5,0 a11,11 1,1,0 0,14 l5,0 q -1,20 -5,43\",\n  //     inverse:\"q 4,-20  5,-43 l-5,0 a11,11 1,1,1 0,-14 l5,0 q -1-20 -5,-43\"},\n  //   {draw:\"q 4,20 5,43 l5,0 a11,11 1,1,1 0,14 l-5,0\tq -1,20 -5,43\",\n  //     inverse:\"q 4,-20  5,-43 l5,0 a11,11 1,1,0 0,-14 l-5,0 q -1-20 -5,-43\"},\n  // ];\n\n  return path[Math.floor(Math.random()*path.length)];\n\n}\n\n/**\n * Create bottom part of piece and inverse\n *\n * @param {number} i - index of puzzle piece\n * @returns {{draw: {string}, inverse: {string}}} - Return a random draw path\n */\nfunction createBottomFace(i){\n  // return {draw:\" l -50,10 l -50,-10 \",inverse:\" l  50,10 l 50,-10 \"}\n\n  //straight faces\n  // return {draw:\"l -43, 0 l0,-5 a11,11 1,1,0 -14,0 l0,5 l -43,0\",\n  //   inverse:\"l 43, 0 l0,-5 a11,11 1,1,1 14,0 l0,5 l 43,0 \"};\n\n  let path = [\n\n    {draw:\"q -20,-4 -43,-5 a15,11 1,1,0 -14,0 q-20,1 -43,5\",\n      inverse:\"q 20,-4 43,-5 a15,11 1,1,1 14,0 q20,1 43,5 \"},\n    {draw:\"q -20,-4 -43,-5 a15,11 1,1,1 -14,0 q-20,1 -43,5\",\n      inverse:\"q 20,-4 43,-5 a15,11 1,1,0 14,0 q20,1 43,5 \"},\n    {draw:\"q -20,4 -43,5 a15,11 1,1,0 -14,0 q-20,-1 -43,-5\",\n      inverse:\"q 20,4 43,5 a15,11 1,1,1 14,0 q20,-1 43,-5 \"},\n    {draw:\"q -20,4 -43,5 a15,11 1,1,1 -14,0 q-20,-1 -43,-5\",\n      inverse:\"q 20,4 43,5 a15,11 1,1,0 14,0 q20,-1 43,-5 \"},\n\n\n    // {draw: \"q -50,15 -100,0\",\n    // inverse: \"q 50,15 100,0\"},\n    // {draw: \"q -50,-15 -100,0\",\n    // inverse: \"q 50,-15 100,0\"}\n  ];\n\n  // let path =[\n  //   {draw:\"q -20,-4 -43,-5 l0,-5 a11,11 1,1,0 -14,0 l0,5 q-20,1 -43,5\",\n  //     inverse:\"q 20,-4 43,-5 l0,-5 a11,11 1,1,1 14,0 l0,5 q20,1 43,5 \"},\n  //   {draw:\"q -20,-4 -43,-5 l0,5 a11,11 1,1,1 -14,0 l0,-5 q-20,1 -43,5\",\n  //     inverse:\"q 20,-4 43,-5 l0,5 a11,11 1,1,0 14,0 l0,-5 q20,1 43,5 \"},\n  //   {draw:\"q -20,4 -43,5 l0,-5 a11,11 1,1,0 -14,0 l0,5 q-20,-1 -43,-5\",\n  //     inverse:\"q 20,4 43,5 l0,-5 a11,11 1,1,1 14,0 l0,5 q20,-1 43,-5 \"},\n  //   {draw:\"q -20,4 -43,5 l0,5 a11,11 1,1,1 -14,0 l0,-5 q-20,-1 -43,-5\",\n  //     inverse:\"q 20,4 43,5 l0,5 a11,11 1,1,0 14,0 l0,-5 q20,-1 43,-5 \"},\n  // ];\n\n  return path[Math.floor(Math.random()*path.length)];\n}\n\n\n/**\n * Get the inverse of left piece's right face to be the left face of current piece\n *\n * @param {number} i - index of puzzle piece to get left face\n * @param {Array<PieceData>} director - list of pieces and their data, similar to the matrix but with a level only\n * @returns {{draw: string}} - path for the left face puzzle piece passed\n */\nfunction getInverseRightFace(i, director){\n  return {draw:director[i-1].b.inverse};\n}\n\n/**\n * Get the inverse of top piece's bottom face to be the top face of current piece\n *\n * @param {number} i - index of puzzle piece to get top face\n * @param {Array<PieceData>} director - list of pieces and their data, similar to the matrix but with a level only\n * @returns {{draw: string}} - path for the top face puzzle piece passed\n */\nfunction getInverseBottomFace(i, director, numCols){\n  return {draw:director[i-numCols].c.inverse};\n}","import '../styles/index.scss';\nimport '../styles/toggle.scss';\n// import $ from 'jquery';\nimport {pieceData} from './puzzlePieceHelper.js';\nimport {checkSidePieces, getCoords} from './piecePlacementHelper.js';\n\n// console.log('webpack starterkit');\n\nconst numberOfImagesToLoad = 32;\nlet zIndex=1;\n// var host='http://www.wdisseny.com/puzzle/';\nlet host='http://picsum.photos';\nlet model;\n\nlet numRows = 3;\nlet numCols = 3;\nlet idOfImageSelected;\n\nlet director; //List with pieces and its data\nlet offset;\nlet piecesPlacedCorrectly;\nlet timeInitial;\nlet timeEnd;\n\n//double click variables\nlet clickCount = 0;\nlet singleClickTimer;\n\nlet sizeOfPieces = 100;\nlet maxSizeOfPieces = 100;\n\nlet selectedPiece= false;\nlet realSelectedPiece = false;\n\nlet puzzleImagesList = {};\nlet imagesLoaded = 0;\n\nlet piecesMatrix = [];\nlet positionsList = [];\n\n/**\n * Rotate pieces at start\n *\n * @type {boolean}\n */\nlet rotatePieces = false;\n\nconst seeImage_btn = document.getElementById(\"seeImage\");\n\n/**\n *  Create puzzle piece element with given path\n *\n * @param piecePath - piece svg path\n * @param {number} x - piece position in matrix row\n * @param {number} y - piece position in matrix column\n * @param index\n */\nfunction createPiece(piecePath,x,y,index){\n\n  piecePath = \"M40,40 \" + piecePath;\n  let canvas = document.createElement('canvas');\n  canvas.width = 180;\n  canvas.height = 180;\n  let ctx = canvas.getContext(\"2d\");\n  let mask = new Path2D(piecePath);\n  ctx.save();\n  ctx.clip(mask);\n\n  let imgSrc = `${host}/id/${idOfImageSelected}/${numCols*100}/${numRows*100}`;\n  let base_image = new Image();\n  // check if //domain.com or http://domain.com is a different origin\n  if (/^([\\w]+\\:)?\\/\\//.test(imgSrc) && imgSrc.indexOf(location.host) === -1) {\n    base_image.crossOrigin = \"anonymous\"; // or \"use-credentials\"\n  }\n  base_image.src = imgSrc;\n  base_image.onload = function(){\n    ctx.drawImage(base_image, x*-100+40, y*-100+40);\n\n    // get png data url\n    let pngUrl = canvas.toDataURL();\n\n    let image = new Image();\n    image.src = pngUrl;\n    image.className = \"puzzle-piece-image\";\n    image.style.width = sizeOfPieces * 180 /  + \"px\";\n    image.style.height = sizeOfPieces * 180 / 100 + \"px\";\n\n    puzzleImagesList[x+'-'+y]  = {image: image, path: piecePath};\n    imagesLoaded++;\n\n    if(imagesLoaded === numRows * numCols ) {\n      placePuzzleImagesInPlace();\n    }\n\n  };\n\n}\n\n/**\n *  Place generated puzzle images on puzzle container\n */\nfunction placePuzzleImagesInPlace() {\n  window.puzzleImagesList = puzzleImagesList;\n\n  piecesMatrix = [];\n  positionsList = [];\n\n  let index = 0;\n  for (let row=0; row<numRows; row++){\n    let rowList = [];\n    for (let col=0; col<numCols; col++){\n\n      let image = puzzleImagesList[col+'-'+row].image;\n      let move = document.createElement(\"DIV\");\n\n      move.innerHTML = `<svg viewbox=\"0 0 180 180\" width=\"${sizeOfPieces * 180 / 100}\" height=\"${sizeOfPieces * 180 / 100}\"> \n        <path d=\"${puzzleImagesList[col+'-'+row].path}\"></path>\n      </svg>`;\n\n      move.appendChild(image);\n\n      move.className=\"move\";\n      move.style.width = sizeOfPieces + \"px\";\n      move.style.height = sizeOfPieces + \"px\";\n      move.onmousedown=getPos;\n      move.onclick=onDblClick;\n      move.ontouchstart=getPos;\n      move.angle=0;\n      move.occupy= false;\n      move.position=function(){return {left:this.offsetLeft+(sizeOfPieces/2),top:this.offsetTop +(sizeOfPieces/2)};};\n      move.onmouseup=dropPiece;\n      move.ontouchend=dropPiece;\n      move.index=index;\n      //position indicates the position on the board\n      let position = document.createElement(\"DIV\");\n      position.className=\"position\";\n      position.style.width = sizeOfPieces + \"px\";\n      position.style.height = sizeOfPieces + \"px\";\n      position.index=index;\n      position.occupied=false;\n      document.querySelector(\"#container\").appendChild(position);\n      position.appendChild(move);\n      positionsList.push(position);\n\n      move.style.zIndex = zIndex++;\n      move.zIndexPrevi=move.style.zIndex;\n      move.x = col;\n      move.y = row;\n\n      rowList.push(move);\n\n      index++;\n    }\n    piecesMatrix.push(rowList);\n  }\n\n  document.getElementById('loading').style.display = 'none';\n  document.getElementById('start').style.display = 'inline-block';\n}\n\n/**\n * Function called when a puzzle image is clicked inside the menu\n *\n * @param {number} id - Id of image clicked\n */\nfunction selectModel(id){\n  document.querySelector(\"#start\").style.height=\"\";\n  seeImage_btn.style.height=\"0\";\n  document.getElementById(\"arrangePieces\").style.height=\"0\";\n\n  document.querySelector(\"#menu\").classList.remove('active');\n  document.querySelector(\"#menuButton\").classList.remove('active');\n\n  idOfImageSelected = id;\n\n  createPuzzle();\n}\n\n/**\n * Function to fetch data from picsum to generate the images, creates also the menu puzzle images\n *\n * @returns {Promise<Response | never>} - Promisse with fetch result\n */\nfunction createListModels(){\n  return fetch(`https://picsum.photos/v2/list?page=${getRandomImageId(10)}&limit=100`)\n    .then(response => response.json())\n    .then( data => {\n      let indexOfImageToLoad = getRandomInt(0., data.length - numberOfImagesToLoad);\n\n      for (let i=0; i < numberOfImagesToLoad; i++) {\n        let id = data[indexOfImageToLoad].id;\n        indexOfImageToLoad++;\n        if(i === 0) idOfImageSelected = id;\n\n        let img = new Image();\n        img.src = `${host}/id/${id}/200/200`;\n        img.alt = \"imageNumber\" + i;\n\n        img.addEventListener(\"click\", () => selectModel(id));\n        document.getElementById(\"models\").appendChild(img);\n      }\n\n      createPuzzle();\n    });\n}\n\n/**\n * Get a random value between 0 and max value passed\n *\n * @param {number} [max = 10] - max value of random number\n * @returns {number} - random number returned\n */\nfunction getRandomImageId(max = 10) {\n  return Math.round(Math.random() * max);\n}\n\nfunction createPuzzle(){\n  piecesPlacedCorrectly=0;\n  let child = document.getElementById(\"container\").getElementsByClassName(\"position\")[0];\n  while (child) {\n    document.getElementById(\"container\").removeChild(child);\n    child = document.getElementById(\"container\").getElementsByClassName(\"position\")[0];\n  }\n\n  let piecesOnBody = document.getElementsByTagName(\"body\")[0].getElementsByClassName(\"move\")[0];\n  while (piecesOnBody) {\n    document.getElementsByTagName(\"body\")[0].removeChild(piecesOnBody);\n    piecesOnBody = document.getElementsByTagName(\"body\")[0].getElementsByClassName(\"move\")[0];\n  }\n\n  director=[];\n  let index=0;\n  selectedPiece= false;\n  realSelectedPiece= false;\n\n  sizeOfPieces = maxSizeOfPieces;\n  //adjust piece size to not overflow screen width\n  if(window.innerWidth < numCols * sizeOfPieces + sizeOfPieces) {\n    sizeOfPieces = Math.floor( window.innerWidth / numCols - 1 );\n  }\n  //adjust piece size so puzzle height don't overpass 2.2 of screen height\n  if(window.innerHeight / 2.2 < numRows * sizeOfPieces) {\n    sizeOfPieces = Math.floor( (window.innerHeight / 2.2) / numRows );\n  }\n\n  if(sizeOfPieces < 40) {\n    sizeOfPieces = 40;\n    alert('Sorry :/ Your device is too small for this puzzle');\n  }\n\n  document.getElementById(\"container\").style.width=numCols*sizeOfPieces +\"px\";\n  document.getElementById(\"container\").style.height=numRows*sizeOfPieces +\"px\";\n  document.getElementById(\"container\").classList.remove('puzzleFinished');\n\n  let backgroundUrl = `${host}/id/${idOfImageSelected}/${numCols*sizeOfPieces}/${numRows*sizeOfPieces}`;\n  document.getElementById(\"backgroundImage\").style.backgroundImage = `url(${backgroundUrl})`;\n  document.getElementById('loading').style.display = 'block';\n\n  puzzleImagesList = {};\n  imagesLoaded = 0;\n  for (let row=0; row<numRows; row++){\n    for (let col=0; col<numCols; col++){\n      let data = pieceData(row,col,index, numRows, numCols, director);\n      director.push(data);\n      createPiece(data.path(),col,row,index);\n      index++;\n    }\n  }\n}\n\n/**\n * Function to add event listeners when document is loaded\n */\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  createListModels();\n\n  document.getElementById(\"start\").onclick= start;\n  document.getElementById(\"arrangePieces\").onclick = arrangePieces;\n  document.getElementById(\"arrangePieces\").style.height=\"0\";\n  seeImage_btn.onclick = seeImage;\n  seeImage_btn.style.height=\"0\";\n\n  let buttonFullScreen=document.getElementById(\"fullscreen\");\n  buttonFullScreen.onclick=function(){\n    let isFullscreen = !!document.fullscreen;\n    let buttonFullScreen=document.getElementById(\"fullscreen\");\n    if ( isFullscreen ){\n      if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }else{\n        document.exitFullscreen();\n      }\n      buttonFullScreen.className=\"fullscreen\";\n    }else{\n      if (document.body.msRequestFullscreen) {\n        document.body.msRequestFullscreen();\n      }else{\n        document.body.requestFullscreen();\n      }\n      buttonFullScreen.className=\"fullscreenOff\";\n    }\n  };\n\n  let radios = document.getElementsByName('radioDifficulty');\n  for(let i = 0, max = radios.length; i < max; i++) {\n    radios[i].addEventListener( 'click', (e) => {\n      numRows = e.currentTarget.getAttribute(\"rows\");\n      numCols = e.currentTarget.getAttribute(\"cols\");\n    });\n  }\n});\n\n/**\n * Function called when window change to or from fullscreen view\n */\ndocument.addEventListener(\"fullscreenchange\", function(){\n  let isFullscreen = !!document.fullscreen;\n  let buttonFullScreen=document.getElementById(\"fullscreen\");\n  if ( isFullscreen ){\n    buttonFullScreen.className=\"fullscreenOff\";\n  }else{\n    buttonFullScreen.className=\"fullscreen\";\n  }\n}, false);\n\n/**\n * Function called when game is finished\n */\nfunction final(){\n  document.getElementById(\"container\").classList.add('puzzleFinished');\n  document.getElementById(\"time\").innerHTML=timeEnd;\n  document.getElementById(\"time\").style.opacity = \"1\";\n\n  seeImage_btn.style.height=\"0\";\n  document.getElementById(\"arrangePieces\").style.height=\"0\";\n  document.getElementById(\"backgroundImage\").classList.remove('checked');\n  seeImage_btn.classList.remove('checked');\n\n}\n\n/**\n * Start function called when the user presses the button start\n */\nfunction start(){\n  document.querySelector(\"#start\").style.height=0;\n  document.getElementById(\"arrangePieces\").style.height=\"\";\n  seeImage_btn.style.height=\"\";\n\n  document.querySelectorAll(\".move\").forEach(function(e,i){\n    let positionToSpawn = getPositionToSpawn();\n    e.style.top = positionToSpawn.top;\n    e.style.left = positionToSpawn.left;\n    e.parentNode.removeChild(e);\n    document.body.appendChild(e);\n\n    rotatePieces = document.getElementById('switch').checked;\n    setTimeout(function(){\n      let angle = rotatePieces ? Math.floor(Math.random()*4) : 0;\n\n      // let angle=0;\n\n      // e.setAttribute(\"classangle\",\"g\"+angle);\n      e.rotation=angle*90;\n      e.angle=angle;\n      e.style.transform=\"rotate(\"+e.rotation+\"deg)\";\n    },10);\n\n\n  });\n  timeInitial = (new Date).getTime();\n  document.getElementById(\"time\").innerHTML=\"\";\n}\n\n/**\n * Distribute pieces around puzzle container\n */\nfunction arrangePieces() {\n  document.querySelectorAll(\"body > .move\").forEach(function(e,i){\n    let positionToSpawn = getPositionToSpawn();\n    e.classList.add(\"animate\");\n\n    if(e.timeout !== undefined) clearTimeout(e.timeout);\n    e.timeout = setTimeout(() => {\n      e.classList.remove(\"animate\");\n      e.timeout = undefined;\n    }, 500);\n\n    e.style.top = positionToSpawn.top;\n    e.style.left = positionToSpawn.left;\n  });\n}\n\n/**\n * Return random position to spawn without being on top of puzzle container\n *\n * @returns {{top: string, left: string}} - positions to place puzzle piece\n */\nfunction getPositionToSpawn() {\n  let minHeightSpawnBottom = document.getElementById('container').getBoundingClientRect().y + document.getElementById('container').getBoundingClientRect().height;\n  let maxHeightSpawnBottom = document.body.clientHeight - sizeOfPieces;\n\n  let minSpawnLeft = 0;\n  let maxSpawnLeft = document.getElementById('container').getBoundingClientRect().x - sizeOfPieces;\n\n  let minSpawnRight = document.getElementById('container').getBoundingClientRect().x + document.getElementById('container').getBoundingClientRect().width;\n  let maxSpawnRight = window.innerWidth - sizeOfPieces ;\n\n  let sideOfSpawn = getRandomInt(0, 2);\n  //spawn bottom\n  if (sideOfSpawn === 1 || document.getElementById('container').getBoundingClientRect().x < sizeOfPieces) {\n    return {top: getRandomInt(minHeightSpawnBottom, maxHeightSpawnBottom) + \"px\",\n      left: getRandomInt(0, window.innerWidth - sizeOfPieces) + \"px\"};\n  }else if (sideOfSpawn === 0) { //spawn right\n    return {top: getRandomInt(80, window.innerHeight - sizeOfPieces) + \"px\",\n      left: getRandomInt(minSpawnLeft, maxSpawnLeft) + \"px\"};\n  } else if (sideOfSpawn === 2) { //spawn left\n    return {top: getRandomInt(80, window.innerHeight - sizeOfPieces) + \"px\",\n      left: getRandomInt(minSpawnRight, maxSpawnRight) + \"px\"};\n  }\n}\n\n/**\n *  Function called on double click on top of puzzle piece to rotate it\n */\nfunction turn(){\n  this.angle++;\n  if( this.angle >= 4 ) this.angle = 0;\n  this.rotation += 90;\n  this.style.transform=\"rotate(\"+this.rotation+\"deg)\";\n  if ((this.occupy===this.index) && this.angle%4 ===0)fixPiece(this);\n}\n\n/**\n * Function to move puzzle piece from document to puzzle container and fix it.\n * Called when a piece it's in its correct and final position\n *\n * @param {Element} p - puzzle piece to fix inside puzzle container\n */\nfunction fixPiece(p){\n  let correspondentPositionOnContainer = positionsList[p.index];\n  let offsetLeft = correspondentPositionOnContainer.offsetLeft + document.getElementById(\"container\").offsetLeft;\n  let offsetTop = correspondentPositionOnContainer.offsetTop + document.getElementById(\"container\").offsetTop;\n  p.style.top=offsetTop+\"px\";\n  p.style.left=offsetLeft+\"px\";\n  correspondentPositionOnContainer.occupied= true;\n  p.occupy = p.index;\n\n  p.parentElement.removeChild(p);\n  correspondentPositionOnContainer.appendChild(p);\n  p.onmousedown=\"\";\n  p.onclick=\"\";\n  p.onmouseover=\"\";\n  p.onmouseout=\"\";\n  p.onmousemove=\"\";\n  p.ondblclick=\"\";\n  p.onmouseup=\"\";\n  p.style.cursor=\"default\";\n  p.style.position=\"static\";\n  p.style.transition=\".1s\";\n\n  setTimeout(function(){p.style.transform=\"scale(1.05)\";},50);\n  setTimeout(function(){p.style.transform=\"scale(1)\";},150);\n  piecesPlacedCorrectly++;\n\n  // Check if all pieces have been connected\n  if (piecesPlacedCorrectly === numRows * numCols ){\n    timeEnd = Math.floor(((new Date).getTime()-timeInitial)/1000);\n    let hours = Math.floor(timeEnd/3600);\n    let minutes =  Math.floor((timeEnd - hours * 3600)/60);\n    minutes= minutes<10 ? \"0\"+minutes : minutes;\n    let seconds = timeEnd - hours * 3600 - minutes *60;\n    seconds= seconds<10 ? \"0\"+seconds : seconds;\n    timeEnd =\"Time spent: \" +\n      +((hours>0) ? hours +\":\" :\"\")+\n      + minutes +\":\" + seconds;\n    document.getElementById(\"time\").style.opacity=0;\n    setTimeout(final,500);\n  }\n}\n\n\n/**\n * Check if piece can be placed in correct position inside puzzle container\n *\n * @param {Element} p - puzzle piece to place\n * @returns {boolean} - boolean value indicating if piece was placed\n */\nfunction placePiece(p){\n  if(p.style) {\n    p.style.zIndex = zIndex++;\n    p.zIndexPrevi = p.style.zIndex;\n\n    let correspondentPositionOnContainer = positionsList[p.index];\n    let offsetLeft = correspondentPositionOnContainer.offsetLeft + document.getElementById(\"container\").offsetLeft;\n    let offsetTop = correspondentPositionOnContainer.offsetTop + document.getElementById(\"container\").offsetTop;\n    if ( ( p.position().left>offsetLeft && p.position().left<offsetLeft+sizeOfPieces ) &&\n        ( p.position().top>offsetTop && p.position().top<offsetTop+sizeOfPieces ) &&\n        !correspondentPositionOnContainer.occupied &&\n          correspondentPositionOnContainer.index === p.index && p.angle%4 === 0){\n        fixPiece(p);\n        if ( [...p.childNodes].find(child => child.className === 'move') ) {\n          let childrenToMove = [];\n          for (let i = 0; i <  p.childNodes.length ; i++) {\n            if( p.childNodes[i].className === 'move' ) {\n              childrenToMove.push(p.childNodes[i]);\n            }\n          }\n          childrenToMove.forEach(function(child){\n            fixPiece(child);\n          });\n        }\n        return true;\n      }\n    return false;\n  }\n}\n\n/**\n * onMouseUp and onTouchEnd handler. Function called when a puzzle piece is dropped.\n */\nfunction dropPiece(){\n  let pieceToPlace = selectedPiece;\n  if( pieceToPlace && pieceToPlace.parentElement.className === 'move' ) pieceToPlace = pieceToPlace.parentElement;\n  let didItPlace = placePiece(pieceToPlace);\n\n  console.log('did it placed', didItPlace);\n\n  if( !didItPlace ) {\n    // check if the piece can be connected\n    let hasConnected = checkSidePieces(selectedPiece, piecesMatrix, sizeOfPieces, numRows, numCols );\n    // if not, check its children\n    if(!hasConnected) {\n      let pieceToCheckChildren;\n      if( selectedPiece && selectedPiece.parentElement.className === 'move' ) {\n        pieceToCheckChildren = selectedPiece.parentElement;\n      } else if( selectedPiece && [...selectedPiece.childNodes].find(child => child.className === 'move') ) {\n        pieceToCheckChildren = selectedPiece;\n      }\n      if( pieceToCheckChildren ) {\n        for (let i = 0; i <  pieceToCheckChildren.childNodes.length ; i++) {\n          if( pieceToCheckChildren.childNodes[i].className === 'move' ) {\n            hasConnected = checkSidePieces(pieceToCheckChildren.childNodes[i], piecesMatrix, sizeOfPieces, numRows, numCols );\n            if(hasConnected) break;\n          }\n        }\n      }\n    }\n  }\n\n  selectedPiece=false;\n\n}\n\ndocument.addEventListener('mousemove', drag, {passive: false});\ndocument.addEventListener(\"touchmove\", drag, {passive: false});\n\n/**\n * Handler for drag event on puzzle piece\n *\n * @param {Element} e - element dragged\n */\nfunction drag(e) {\n  if (e.type === 'touchmove' ) {\n    e.clientX = e.touches[0].clientX;\n    e.clientY = e.touches[0].clientY;\n  }\n\n  let pieceToDrag = selectedPiece;\n  if(selectedPiece && selectedPiece.parentElement.className === 'move') {\n    pieceToDrag = pieceToDrag.parentElement;\n  }\n\n  if (pieceToDrag) {\n    let mousePosition = {\n\n      x : e.clientX,\n      y : e.clientY\n\n    };\n    pieceToDrag.style.left = (mousePosition.x + offset[0]) + 'px';\n    pieceToDrag.style.top  = (mousePosition.y + offset[1]) + 'px';\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}\n\n/**\n * Function called when a piece is being dragged\n *\n * @param {Element} e\n */\nfunction takePiece(e){\n  // if its already placed, do nothing\n  if(e.target.parentElement.className === 'position') {\n    return;\n  }\n\n  selectedPiece=this;\n  offset = [\n    this.offsetLeft - e.clientX,\n    this.offsetTop - e.clientY\n  ];\n\n  // if it's a child piece, already connected, drag its parent\n  if(e.target.parentElement.className === 'move') {\n    offset = [\n      getCoords(e.target.parentElement).left - e.clientX,\n      getCoords(e.target.parentElement).top  - e.clientY\n    ];\n  }\n\n\n  if(typeof this.occupy == \"number\") {\n    document.querySelectorAll(\".position\")[this.occupy].occupied= false;\n    this.occupy=false;\n  }\n\n}\n\n/**\n * Handler for onMouseDown and onTouchStart\n * Get the coordinates and selects the puzzle piece clicked\n *\n * @param e element being clicked\n */\nfunction getPos(e){\n  if (e.type === 'touchstart' ) {\n    e.clientX = e.touches[0].clientX;\n    e.clientY = e.touches[0].clientY;\n  }\n\n  let cords = getCoords(this);\n  let x = e.clientX - cords.left ;\n  let y = e.clientY - cords.top;\n\n  if ((x>0 && x<sizeOfPieces) && (y>0 && y<sizeOfPieces)){\n    takePiece.call(this, e);\n    this.style.zIndex=zIndex+1;\n  }else{\n    this.style.zIndex=this.zIndexPrevi;\n  }\n\n\n}\n\n\nlet lastTarget;\n/**\n * Handler for double click\n * This handler saves the last element clicked and if the element is clicked again in the time period of 300ms, a double click is triggered to rotate the piece clicked\n * @param e mouse event\n */\nfunction onDblClick(e) {\n  if( e.target.parentElement.className === 'move' || e.target.querySelectorAll('.move').length > 0 || !rotatePieces ) {\n    return;\n  }\n\n  if ( lastTarget === undefined || lastTarget !== e.target) {\n    lastTarget = e.target;\n    clickCount = 1;\n  }else {\n    clickCount++;\n  }\n\n  if (clickCount === 1) {\n    singleClickTimer = setTimeout(function() {\n      clickCount = 0;\n    }, 300);\n  } else if (clickCount === 2) {\n    clearTimeout(singleClickTimer);\n    clickCount = 0;\n    turn.call(this);\n  }\n}\n\n/**\n *\n * @param min minimum value for returned integer\n * @param max maximum value for returned integer\n * @returns {number} random number between min and max values passed\n */\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Click listener for \"see image\" button\n */\nfunction seeImage() {\n  let element = document.getElementById(\"backgroundImage\");\n  if (this.classList.contains('checked')) {\n    element.classList.remove('checked');\n    this.classList.remove('checked');\n  } else {\n    element.classList.add('checked');\n    this.classList.add('checked');\n  }\n\n}\n\n/**\n *  Event listener for menuButton, toggle menu button and menu\n */\ndocument.getElementById('menuButton').addEventListener('click', (e) => {\n  let element = e.currentTarget;\n  let menuElement = document.getElementById('menu');\n  if (element.classList.contains('active')) {\n    element.classList.remove('active');\n    menuElement.classList.remove('active');\n  } else {\n    element.classList.add('active');\n    menuElement.classList.add('active');\n  }\n  e.stopPropagation();\n});\n\ndocument.getElementById('menu').addEventListener('click', (e) => {\n  e.stopPropagation();\n});\n\n/**\n* Event listener for document click, hide menu if is opened\n*/\ndocument.addEventListener(\"click\", function(){\n  let menuElement = document.getElementById('menu');\n  let menuButtonElement = document.getElementById('menuButton');\n  menuElement.classList.remove('active');\n  menuButtonElement.classList.remove('active');\n});"],"sourceRoot":""}